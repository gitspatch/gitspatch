"""Initial migration

Revision ID: 54c1023e3ea5
Revises:
Create Date: 2024-12-15 10:51:37.873761

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "54c1023e3ea5"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "gitspatch_users",
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("github_account_id", sa.String(), nullable=False),
        sa.Column("github_token", sa.JSON(), nullable=False),
        sa.Column("id", sa.CHAR(length=14), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_gitspatch_users")),
    )
    op.create_index(
        op.f("ix_gitspatch_users_created_at"),
        "gitspatch_users",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_gitspatch_users_updated_at"),
        "gitspatch_users",
        ["updated_at"],
        unique=False,
    )
    op.create_table(
        "gitspatch_user_sessions",
        sa.Column("user_id", sa.CHAR(length=14), nullable=False),
        sa.Column("token", sa.String(), nullable=False),
        sa.Column("expires_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("id", sa.CHAR(length=14), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["gitspatch_users.id"],
            name=op.f("fk_gitspatch_user_sessions_user_id_gitspatch_users"),
            ondelete="cascade",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_gitspatch_user_sessions")),
    )
    op.create_index(
        op.f("ix_gitspatch_user_sessions_created_at"),
        "gitspatch_user_sessions",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_gitspatch_user_sessions_expires_at"),
        "gitspatch_user_sessions",
        ["expires_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_gitspatch_user_sessions_token"),
        "gitspatch_user_sessions",
        ["token"],
        unique=True,
    )
    op.create_index(
        op.f("ix_gitspatch_user_sessions_updated_at"),
        "gitspatch_user_sessions",
        ["updated_at"],
        unique=False,
    )
    op.create_table(
        "gitspatch_webhooks",
        sa.Column("user_id", sa.CHAR(length=14), nullable=False),
        sa.Column("repository_id", sa.BigInteger(), nullable=False),
        sa.Column("workflow_id", sa.String(), nullable=False),
        sa.Column("installation_id", sa.BigInteger(), nullable=False),
        sa.Column("owner", sa.String(), nullable=False),
        sa.Column("repository_name", sa.String(), nullable=False),
        sa.Column("token", sa.String(), nullable=False),
        sa.Column("id", sa.CHAR(length=14), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["gitspatch_users.id"],
            name=op.f("fk_gitspatch_webhooks_user_id_gitspatch_users"),
            ondelete="cascade",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_gitspatch_webhooks")),
    )
    op.create_index(
        op.f("ix_gitspatch_webhooks_created_at"),
        "gitspatch_webhooks",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_gitspatch_webhooks_token"),
        "gitspatch_webhooks",
        ["token"],
        unique=True,
    )
    op.create_index(
        op.f("ix_gitspatch_webhooks_updated_at"),
        "gitspatch_webhooks",
        ["updated_at"],
        unique=False,
    )
    op.create_table(
        "gitspatch_webhook_events",
        sa.Column("webhook_id", sa.CHAR(length=14), nullable=False),
        sa.Column("workflow_run_id", sa.String(), nullable=True),
        sa.Column("workflow_run_status", sa.String(), nullable=True),
        sa.Column("payload", sa.Text(), nullable=True),
        sa.Column("id", sa.CHAR(length=14), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["webhook_id"],
            ["gitspatch_webhooks.id"],
            name=op.f("fk_gitspatch_webhook_events_webhook_id_gitspatch_webhooks"),
            ondelete="cascade",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_gitspatch_webhook_events")),
    )
    op.create_index(
        op.f("ix_gitspatch_webhook_events_created_at"),
        "gitspatch_webhook_events",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_gitspatch_webhook_events_updated_at"),
        "gitspatch_webhook_events",
        ["updated_at"],
        unique=False,
    )
    op.create_table(
        "gitspatch_webhook_event_deliveries",
        sa.Column("webhook_event_id", sa.CHAR(length=14), nullable=False),
        sa.Column("attempt", sa.Integer(), nullable=False),
        sa.Column("success", sa.Boolean(), nullable=False),
        sa.Column("status_code", sa.Integer(), nullable=True),
        sa.Column("response_body", sa.Text(), nullable=True),
        sa.Column("id", sa.CHAR(length=14), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["webhook_event_id"],
            ["gitspatch_webhook_events.id"],
            name=op.f(
                "fk_gitspatch_webhook_event_deliveries_webhook_event_id_gitspatch_webhook_events"
            ),
            ondelete="cascade",
        ),
        sa.PrimaryKeyConstraint(
            "id", name=op.f("pk_gitspatch_webhook_event_deliveries")
        ),
    )
    op.create_index(
        op.f("ix_gitspatch_webhook_event_deliveries_created_at"),
        "gitspatch_webhook_event_deliveries",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_gitspatch_webhook_event_deliveries_updated_at"),
        "gitspatch_webhook_event_deliveries",
        ["updated_at"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_gitspatch_webhook_event_deliveries_updated_at"),
        table_name="gitspatch_webhook_event_deliveries",
    )
    op.drop_index(
        op.f("ix_gitspatch_webhook_event_deliveries_created_at"),
        table_name="gitspatch_webhook_event_deliveries",
    )
    op.drop_table("gitspatch_webhook_event_deliveries")
    op.drop_index(
        op.f("ix_gitspatch_webhook_events_updated_at"),
        table_name="gitspatch_webhook_events",
    )
    op.drop_index(
        op.f("ix_gitspatch_webhook_events_created_at"),
        table_name="gitspatch_webhook_events",
    )
    op.drop_table("gitspatch_webhook_events")
    op.drop_index(
        op.f("ix_gitspatch_webhooks_updated_at"), table_name="gitspatch_webhooks"
    )
    op.drop_index(op.f("ix_gitspatch_webhooks_token"), table_name="gitspatch_webhooks")
    op.drop_index(
        op.f("ix_gitspatch_webhooks_created_at"), table_name="gitspatch_webhooks"
    )
    op.drop_table("gitspatch_webhooks")
    op.drop_index(
        op.f("ix_gitspatch_user_sessions_updated_at"),
        table_name="gitspatch_user_sessions",
    )
    op.drop_index(
        op.f("ix_gitspatch_user_sessions_token"), table_name="gitspatch_user_sessions"
    )
    op.drop_index(
        op.f("ix_gitspatch_user_sessions_expires_at"),
        table_name="gitspatch_user_sessions",
    )
    op.drop_index(
        op.f("ix_gitspatch_user_sessions_created_at"),
        table_name="gitspatch_user_sessions",
    )
    op.drop_table("gitspatch_user_sessions")
    op.drop_index(op.f("ix_gitspatch_users_updated_at"), table_name="gitspatch_users")
    op.drop_index(op.f("ix_gitspatch_users_created_at"), table_name="gitspatch_users")
    op.drop_table("gitspatch_users")
    # ### end Alembic commands ###
