"""Add User and UserSession

Revision ID: d1920614f5b2
Revises:
Create Date: 2024-11-11 11:06:28.005093

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "d1920614f5b2"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "gitspatch_user",
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("github_account_id", sa.String(), nullable=False),
        sa.Column("id", sa.CHAR(length=14), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_gitspatch_user")),
    )
    op.create_index(
        op.f("ix_gitspatch_user_created_at"),
        "gitspatch_user",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_gitspatch_user_updated_at"),
        "gitspatch_user",
        ["updated_at"],
        unique=False,
    )
    op.create_table(
        "gitspatch_user_session",
        sa.Column("user_id", sa.CHAR(length=14), nullable=False),
        sa.Column("token", sa.String(), nullable=False),
        sa.Column("expires_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("id", sa.CHAR(length=14), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["gitspatch_user.id"],
            name=op.f("fk_gitspatch_user_session_user_id_gitspatch_user"),
            ondelete="cascade",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_gitspatch_user_session")),
    )
    op.create_index(
        op.f("ix_gitspatch_user_session_created_at"),
        "gitspatch_user_session",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_gitspatch_user_session_expires_at"),
        "gitspatch_user_session",
        ["expires_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_gitspatch_user_session_token"),
        "gitspatch_user_session",
        ["token"],
        unique=True,
    )
    op.create_index(
        op.f("ix_gitspatch_user_session_updated_at"),
        "gitspatch_user_session",
        ["updated_at"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_gitspatch_user_session_updated_at"),
        table_name="gitspatch_user_session",
    )
    op.drop_index(
        op.f("ix_gitspatch_user_session_token"), table_name="gitspatch_user_session"
    )
    op.drop_index(
        op.f("ix_gitspatch_user_session_expires_at"),
        table_name="gitspatch_user_session",
    )
    op.drop_index(
        op.f("ix_gitspatch_user_session_created_at"),
        table_name="gitspatch_user_session",
    )
    op.drop_table("gitspatch_user_session")
    op.drop_index(op.f("ix_gitspatch_user_updated_at"), table_name="gitspatch_user")
    op.drop_index(op.f("ix_gitspatch_user_created_at"), table_name="gitspatch_user")
    op.drop_table("gitspatch_user")
    # ### end Alembic commands ###
