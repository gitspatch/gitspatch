name: Build

on: [push, pull_request]

jobs:
  test:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:alpine
        env:
          POSTGRES_USER: gitspatch
          POSTGRES_PASSWORD: gitspatch
          POSTGRES_DB: gitspatch-test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    strategy:
      matrix:
        python_version: ['3.12']

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python_version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install hatch
        hatch env create
    - name: Lint and typecheck
      run: |
        hatch run lint-check
    - name: Test
      run: |
        hatch run test-cov-xml
    - uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true
        verbose: true

  deploy:
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://www.gitspatch.dev
    concurrency: production
    needs: test
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - uses: actions/checkout@v4
    - name: Deploy server
      uses: benbristow/dokploy-deploy-action@0.0.1
      with:
        auth_token: ${{ secrets.DOKPLOY_AUTH_TOKEN }}
        application_id: ${{ secrets.DOKPLOY_SERVER_ID }}
        dokploy_url: ${{ secrets.DOKPLOY_URL }}
    - name: Deploy worker
      uses: benbristow/dokploy-deploy-action@0.0.1
      with:
        auth_token: ${{ secrets.DOKPLOY_AUTH_TOKEN }}
        application_id: ${{ secrets.DOKPLOY_WORKER_ID }}
        dokploy_url: ${{ secrets.DOKPLOY_URL }}
    - name: Create release
      uses: ncipollo/release-action@v1
      with:
        draft: true
        body: ${{ github.event.head_commit.message }}
        artifacts: dist/*.whl,dist/*.tar.gz
        token: ${{ secrets.GITHUB_TOKEN }}
